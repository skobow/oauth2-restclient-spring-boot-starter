/*
 * MIT License
 *
 * Copyright (c) 2019 Sven Kobow
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
    id 'com.github.ben-manes.versions' version '0.20.0'
}

ext {
    springBootVersion = '2.1.1.RELEASE'
    springVersion = '5.1.3.RELEASE'
    junitVersion = '4.12'
}

allprojects {
    group 'net.skobow'
    version '0.1.0'

    publishing {
        repositories {
            maven {
                name = 'default'
                url = "file://${buildDir}/repo"
            }
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'signing'
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        }
    }
    
    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        classifier = 'sources'
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier "javadoc"
        from javadoc.destinationDir
    }

    artifacts {
        archives jar
        archives sourcesJar
        archives javadocJar
    }

    sourceCompatibility = 1.8

    repositories {
        jcenter()
    }
    
    dependencies {
        testImplementation ("junit:junit:${rootProject.junitVersion}")
    }

    signIt(project)
}

dependencies {
    implementation(project(':oauth2-restclient-spring-boot-autoconfigure'))
}

publishing {
    publications {
        starter(MavenPublication) {
            customizePom(pom)
            groupId = "${groupId}"
            artifactId = 'oauth2-restclient-spring-boot-starter'
            version = "${version}"

            from components.java

            // create the sign pom artifact
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }

            // create the signed artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

signing {
    sign configurations.archives
}

private Object signIt(project) {
    project.with {
        signing {
            sign configurations.archives
        }
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Lean and easy to use OAuth2 enabled and Spring Boot powered REST client to interact with secured APIs'
            name 'OAuth2RestClient'
            url 'https://github.com/skobow/oauth2-restclient-spring-boot-starter'
            organization {
                name 'skobow'
                url 'https://github.com/skobow'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/skobow/oauth2-restclient-spring-boot-starter/issues'
            }
            licenses {
                license {
                    name 'MIT'
                    url 'https://github.com/skobow/oauth2-restclient-spring-boot-starter/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/skobow/oauth2-restclient-spring-boot-starter'
                connection 'scm:git:git://github.com:skobow/oauth2-restclient-spring-boot-starter.git'
                developerConnection 'scm:git:ssh://git@github.com:skobow/oauth2-restclient-spring-boot-starter.git'
            }
            developers {
                developer {
                    name 'skobow'
                }
            }
        }
    }
}

model {
    tasks.generatePomFileForStarterPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishStarterPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishStarterPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}
